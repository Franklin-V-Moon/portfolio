import { Button, Grid } from "@mui/material";
import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { SortButton } from "../../src/components/buttons/SortButton";
import { FeedCard } from "../../src/components/feed/FeedCard";
import { SortOptions } from "../../src/components/feed/sort/types";
import { PageContainer } from "../../src/components/PageContainer";
import { projectMetaData } from "../../src/projects/database/ProjectMetaData";
import { projectFeedCardStyle } from "../../src/projects/projectFeedCardStyle";
import { tutorialFeedCardFormatting } from "../../src/tutorials/tutorialFeedCardStyle";
import useDeviceDetect from "../../utils/useDeviceDetect";
import SendIcon from '@mui/icons-material/Send';
import GitHubIcon from '@mui/icons-material/GitHub';
import LanguageIcon from '@mui/icons-material/Language';
import BrushIcon from '@mui/icons-material/Brush';
import FormatPaintIcon from '@mui/icons-material/FormatPaint';

const Projects: NextPage = () => {
  const { isMobile } = useDeviceDetect();
  
  const [sortBy, setSortBy] = useState<SortOptions>(SortOptions.Newest);
  const testData = projectMetaData;
  
  return (
    <div>
      <Head>
        <title>Skills - Franklin V Moon</title>
        <meta name="Skills" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageContainer>
        <div style={{margin: "25px"}}>
          <SortButton setSortMetaDataBy={setSortBy} />
        </div>

        <Grid container spacing={1} justifyContent="center">
          {testData.map((dataItem) => {
            return (
              <Grid item key={dataItem.title} style={{textAlign: "center"}}>
                <FeedCard formatting={projectFeedCardStyle(isMobile)} cardData={dataItem} />
                <div style={
                  { 
                    display: "flex", 
                    margin: "20px 0px 40px 0px", 
                    gap: "15px", 
                    justifyContent: "center"
                  }
                }>
                  {dataItem.deployedURL ? <Button variant="outlined" endIcon={<GitHubIcon />} color="baseGrey">
                    Repo
                  </Button> : null}
                  {dataItem.uxURL ? <Button variant="outlined" endIcon={<FormatPaintIcon />} color="secondary">
                    UX
                  </Button> : null}
                  {dataItem.repoURL ? <Button variant="outlined" endIcon={<LanguageIcon />} color="error">
                    Site
                  </Button> : null}
                </div>
              </Grid>
            );
          })}
        </Grid>
      </PageContainer>
    </div>
  );
};

export default Projects;
