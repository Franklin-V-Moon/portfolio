import { Dialog, DialogTitle, Divider, Link } from "@mui/material";
import type { NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import { PageContainer } from "../../components/layout/PageContainer";
import { MultiSelectFilter } from "../../components/misc/MultiSelectFilterField";
import { SingleSelectFilterField } from "../../components/misc/SingleSelectFilterField";
import { FilterButton } from "../../src/tutorials/components/buttons/FilterButton";
import { SortButton } from "../../src/tutorials/components/buttons/SortButton";
import { filterMetaData } from "../../src/tutorials/components/filters/filterMetaData";
import { sortMetaData } from "../../src/tutorials/components/filters/sortMetaData";
import {
  SortOptions,
  tutorialMetaData,
} from "../../src/tutorials/tutorialsDataService";
import { Languages, Tags, Topic } from "../../src/tutorials/types";
import { slideTransition } from "../../utils/muiSpecificLogic";
import useDeviceDetect from "../../utils/useDeviceDetect";

const Transition = slideTransition("right");

const Tutorials: NextPage = () => {
  const { isMobile } = useDeviceDetect();

  const availableTopics: Topic[] = Object.values(Topic);
  const availableLanguages: Languages[] = Object.values(Languages);
  const availableTags: Tags[] = Object.values(Tags);
  const tutorialPurple = "#ce93d8";

  const [sortMetaDataBy, setSortMetaDataBy] = useState(SortOptions.Newest);
  const [sortedMetaData, setSortedMetaData] = useState(tutorialMetaData);

  const [topicFilter, setTopicFilter] = useState<Topic | undefined>(undefined);
  const [filteredLanguages, setFilteredLanguages] = useState([] as Languages[]);
  const [tagsFilter, setTagsFilter] = useState([] as Tags[]);
  const [filteredMetaData, setFilteredData] = useState(sortedMetaData);
  const [showFilterMenu, setShowFilterMenu] = React.useState(false);

  useEffect(() => {
    sortMetaData(tutorialMetaData, sortMetaDataBy, setSortedMetaData);
  }, [sortMetaDataBy, filteredMetaData]);

  useEffect(() => {
    filterMetaData(
      sortedMetaData,
      topicFilter,
      filteredLanguages,
      tagsFilter,
      setFilteredData
    );
  }, [
    filteredLanguages,
    sortedMetaData,
    tagsFilter,
    topicFilter,
    sortMetaDataBy,
  ]);

  const handleCloseFilterMenu = () => {
    setShowFilterMenu(false);
  };

  return (
    <div>
      <Head>
        <title>Tutorials</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageContainer>
        <div style={{ display: "flex" }}>
          <SortButton setSortMetaDataBy={setSortMetaDataBy} />
          <FilterButton setShowFilterMenu={setShowFilterMenu} />
        </div>

        {/* <Link
          href={`/tutorials/programming/quickly-setup-next-js-with-typescript`}
        >
          <a>Quickly Setup NextJs</a>
        </Link>

        <ol>
          {filteredMetaData.map((link) => (
            <li key={link.title}>{link.title}</li>
          ))}
        </ol> */}
        <Dialog
          open={showFilterMenu}
          TransitionComponent={Transition}
          keepMounted
          onClose={handleCloseFilterMenu}
        >
          <div
            style={
              isMobile
                ? { margin: "10px 0px 50px 0px" }
                : { margin: "20px 50px 50px 50px" }
            }
          >
            <DialogTitle>{"Filter"}</DialogTitle>

            <Divider sx={{ borderColor: tutorialPurple }} />
            <SingleSelectFilterField
              label={"Topic"}
              defaultValue={"All"}
              filter={topicFilter}
              setFilter={setTopicFilter}
              dropDownData={availableTopics}
              highlightColor={tutorialPurple}
            />
            <MultiSelectFilter
              label={"Languages"}
              filter={filteredLanguages}
              setFilter={setFilteredLanguages}
              dropDownData={availableLanguages}
              highlightColor={tutorialPurple}
            />
            <MultiSelectFilter
              label={"Tags"}
              filter={tagsFilter}
              setFilter={setTagsFilter}
              dropDownData={availableTags}
              highlightColor={tutorialPurple}
            />
          </div>
        </Dialog>
      </PageContainer>
    </div>
  );
};

export default Tutorials;
