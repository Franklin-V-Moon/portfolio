import { Link } from "@mui/material";
import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { FilterTopicButton } from "../../src/tutorials/buttons/FilterTopicButton";
import { SortButton } from "../../src/tutorials/buttons/SortButton";
import { PageContainer } from "../../layout/PageContainer";
import {
  filterForLanguages,
  filterForTags,
  filterForTopic,
  orderByAlphabetical,
  orderByNewest,
  orderByOldest,
  SortOptions,
  tutorialMetaData,
} from "../../src/tutorials/tutorialsDataService";
import { Languages, Topic } from "../../src/tutorials/types";
import { LanguagesFilterButton } from "../../src/tutorials/buttons/LanguagesFilterButton";

const Tutorials: NextPage = () => {
  const [sortMetaDataBy, setSortMetaDataBy] = useState(SortOptions.Newest);
  const [sortedMetaData, setSortedMetaData] = useState(tutorialMetaData);

  const [topicFilter, setTopicFilter] = useState<Topic | undefined>(undefined);

  const [languagesFilter, setLanguagesFilter] = useState(
    [] as unknown as Languages[]
  );
  const [tagsFilter, setTagsFilter] = useState([]);
  const [filteredMetaData, setFilteredData] = useState(sortedMetaData);

  const availableLanguages: Languages[] = Object.values(Languages);
  useEffect(() => {
    switch (sortMetaDataBy) {
      case SortOptions.Newest:
        setSortedMetaData(orderByNewest(tutorialMetaData));
        break;
      case SortOptions.Oldest:
        setSortedMetaData(orderByOldest(tutorialMetaData));
        break;
      case SortOptions.Alphabetical:
        setSortedMetaData(orderByAlphabetical(tutorialMetaData));
        break;
    }
  }, [sortMetaDataBy, filteredMetaData]);

  useEffect(() => {
    let filteredData = sortedMetaData;

    if (topicFilter) {
      filteredData = filterForTopic(filteredData, topicFilter);
    }

    if (languagesFilter.length) {
      filteredData = filterForLanguages(filteredData, languagesFilter);
    }

    if (tagsFilter.length) {
      filteredData = filterForTags(filteredData, tagsFilter);
    }

    setFilteredData(filteredData);
  }, [
    languagesFilter,
    sortedMetaData,
    tagsFilter,
    topicFilter,
    sortMetaDataBy,
  ]);

  return (
    <div>
      <Head>
        <title>Tutorials</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageContainer>
        <SortButton setSortMetaDataBy={setSortMetaDataBy} />
        <FilterTopicButton setTopicFilter={setTopicFilter} />
        <LanguagesFilterButton
          setLanguagesFilter={setLanguagesFilter}
          languagesFilter={languagesFilter}
          availableLanguages={availableLanguages}
        />

        <Link
          href={`/tutorials/programming/quickly-setup-next-js-with-typescript`}
        >
          <a>Quickly Setup NextJs</a>
        </Link>

        <ol>
          {filteredMetaData.map((link) => (
            <li key={link.title}>{link.title}</li>
          ))}
        </ol>
      </PageContainer>
    </div>
  );
};

export default Tutorials;
